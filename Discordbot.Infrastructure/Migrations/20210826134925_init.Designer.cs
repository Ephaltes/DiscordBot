// <auto-generated />
using System;
using Discordbot.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Discordbot.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210826134925_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("DiscordBot.Core.Entity.EventEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("ChannelToPostId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("ServerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("EventEntities");
                });

            modelBuilder.Entity("DiscordBot.Core.Entity.TimeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TimeEntities");
                });

            modelBuilder.Entity("DiscordBot.Core.Entity.UploadOnlyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ChannelToPostId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ServerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("UploadOnlyEntities");
                });

            modelBuilder.Entity("EventEntityTimeEntity", b =>
                {
                    b.Property<Guid>("EventEntitiesId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeEntitiesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EventEntitiesId", "TimeEntitiesId");

                    b.HasIndex("TimeEntitiesId");

                    b.ToTable("EventEntityTimeEntity");
                });

            modelBuilder.Entity("EventEntityTimeEntity", b =>
                {
                    b.HasOne("DiscordBot.Core.Entity.EventEntity", null)
                        .WithMany()
                        .HasForeignKey("EventEntitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiscordBot.Core.Entity.TimeEntity", null)
                        .WithMany()
                        .HasForeignKey("TimeEntitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
